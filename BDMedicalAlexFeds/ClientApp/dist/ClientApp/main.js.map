{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\r\n\r\n\r\n<div class=\"bd-table-wrapper\">\r\n  <p-card>\r\n\r\n    <p-table>\r\n\r\n      <ng-template pTemplate=\"caption\">\r\n\r\n        <div class=\"table-header bd-input-wrapper\">\r\n          Number of batches\r\n       \r\n            <input [(ngModel)]=\"numBatchInput\" pInputText type=\"text\" placeholder=\"Global Search\" />\r\n         \r\n        </div>\r\n\r\n        <div class=\"table-header bd-input-wrapper\">\r\n          Number per batch\r\n      \r\n            <input  [(ngModel)]=\"numPerBatchInput\" pInputText type=\"text\" placeholder=\"Global Search\" />\r\n       \r\n        </div>\r\n\r\n\r\n        <div class=\"bd-buttons-wrapper\">\r\n\r\n          <button (click)=\"processNumbers()\" pButton pRipple type=\"button\" label=\"Start\" class=\"p-button-raised\"></button>\r\n\r\n          <button pButton pRipple type=\"button\" label=\"Stop\" class=\"p-button-raised\"></button>\r\n\r\n\r\n        </div>\r\n      </ng-template>\r\n\r\n\r\n      <ng-template pTemplate=\"header\">\r\n        <tr>\r\n          <th>Batch number</th>\r\n          <th>Numbers to process</th>\r\n          <th>Generated numbers</th>\r\n          <th>Total</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate=\"body\" let-car>\r\n        <tr>\r\n          <td>{{car.vin}}</td>\r\n          <td>{{car.year}}</td>\r\n          <td>{{car.brand}}</td>\r\n          <td>{{car.color}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n\r\n  </p-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n\n  numBatchInput: number = 0;\n  numPerBatchInput: number = 0;\n\n  constructor() { }\n\n\n  ngOnInit() {\n\n\n\n  }\n\n  processNumbers() {\n      console.log(\"numBatchInput\", this.numBatchInput),\r\n      console.log(\"numPerBatchInput\", this.numPerBatchInput)\r\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n//primeng\nimport { TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    TableModule,\n    InputTextModule,\n    ButtonModule,\n    CardModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}